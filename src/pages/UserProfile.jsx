import { useEffect, useState } from 'react';
import { useParams, Link } from 'react-router-dom';
import ProjectCard from '../components/ProjectCard'; // –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –ø—É—Ç—å
import '../App.css';

function UserProfile() {
  const { userId } = useParams();
  const [user, setUser] = useState(null);
  const [projects, setProjects] = useState([]);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    const fetchData = async () => {
      try {
        // –ó–∞–≥–ª—É—à–∫–∞ –¥–∞–Ω–Ω—ã—Ö
        await new Promise(resolve => setTimeout(resolve, 500));
        
        const mockUser = {
          id: userId,
          name: '–ê–ª–µ–∫—Å–µ–π –ü–µ—Ç—Ä–æ–≤',
          bio: '–§—Ä–æ–Ω—Ç–µ–Ω–¥ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ —Å 5-–ª–µ—Ç–Ω–∏–º –æ–ø—ã—Ç–æ–º —Ä–∞–±–æ—Ç—ã —Å React –∏ Node.js',
          skills: ['JavaScript', 'React', 'Node.js', 'TypeScript'], // –ó–¥–µ—Å—å –ø—Ä–∞–≤–∏–ª—å–Ω–æ
          joinedAt: '2020-03-15'
        };

        const mockProjects = [
          {
            id: 1,
            title: '–í–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–¥–∞—á–∞–º–∏',
            description: '–ü–æ–ª–Ω–æ—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–µ–π',
            rating: 4.7,
            reviewsCount: 15,
            imageUrl: '/project1.jpg'
          },
          {
            id: 2,
            title: 'API –¥–ª—è —Å–µ—Ä–≤–∏—Å–∞ –±–ª–æ–≥–æ–≤',
            description: 'RESTful API –Ω–∞ Node.js —Å MongoDB',
            rating: 4.3,
            reviewsCount: 8,
            imageUrl: '/project2.jpg'
          }
        ];

        setUser(mockUser);
        setProjects(mockProjects);
        setLoading(false);
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö:', error);
        setLoading(false);
      }
    };

    fetchData();
  }, [userId]);

  if (loading) {
    return <div className="loading">–ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ—Ñ–∏–ª—è...</div>;
  }

  if (!user) {
    return <div className="error">–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω</div>;
  }

  return (
    <div className="user-profile">
      <div className="container">
        <div className="profile-header">
          <div className="profile-avatar">
            <img src="/avatar-placeholder.jpg" alt={user.name} />
          </div>
          <div className="profile-info">
            <h1>{user.name}</h1>
            <p className="profile-bio">{user.bio}</p>
            <div className="profile-meta">
              <span>üìÖ –£—á–∞—Å—Ç–Ω–∏–∫ —Å {new Date(user.joinedAt).toLocaleDateString()}</span>
            </div>
            <div className="profile-skills">
              {user.skills.map(skill => (
                <span key={skill} className="skill-tag">{skill}</span>
              ))}
            </div>
          </div>
        </div>

        <div className="user-projects">
          <h2>–ü—Ä–æ–µ–∫—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</h2>
          <div className="projects-grid">
            {projects.map(project => (
              <ProjectCard key={project.id} project={project} />
            ))}
          </div>
        </div>
      </div>
    </div>
  );
}

export default UserProfile;